#!/bin/bashn# create-project-prp.sh - Generate project-specific PRPnnecho "📝 Creating project-specific PRP..."nn# Check if project name is providednif [ -z "$1" ]; thenn    echo "❌ ERROR: Project name required"n    echo "Usage: ./create-project-prp.sh <project-name>"n    exit 1nfinnPROJECT_NAME="$1"nnecho "   Project: $PROJECT_NAME"nn# Check if updated template existsnif [ ! -f "templates/prp-base-updated.md" ]; thenn    echo "❌ ERROR: Updated PRP template not found!"n    echo "   Run step-2-update-template.sh first"n    exit 1nfinn# Check if initial.md existsnif [ ! -f "initial.md" ]; thenn    echo "❌ ERROR: initial.md not found!"n    echo "   Create initial.md with project context first"n    exit 1nfinn# Create backups directorynmkdir -p "backups"nnecho "   📖 Reading project context..."nn# Extract project information from initial.mdnLANGUAGE=$(grep "Language:" initial.md | cut -d: -f2 | tr -d ' ')nPURPOSE=$(grep "Purpose:" initial.md | cut -d: -f2 | tr -d ' ')nFRAMEWORK=$(grep "Framework:" initial.md | cut -d: -f2 | tr -d ' ' || echo "None")nnecho "   ✅ Language: $LANGUAGE"necho "   ✅ Purpose: $PURPOSE"necho "   ✅ Framework: $FRAMEWORK"nn# Create project-specific PRPnPRP_FILENAME="$PROJECT_NAME.prp"necho "   📄 Generating: $PRP_FILENAME"nn# Copy updated template to project PRPncp "templates/prp-base-updated.md" "$PRP_FILENAME"nn# Replace placeholders with project-specific contentnCURRENT_DATE=$(date +%Y-%m-%d)nsed -i "s/\[PROJECT_NAME\]/$PROJECT_NAME/g" "$PRP_FILENAME"nsed -i "s/\[LANGUAGE\]/$LANGUAGE/g" "$PRP_FILENAME"nsed -i "s/\[FRAMEWORK\]/$FRAMEWORK/g" "$PRP_FILENAME"nsed -i "s/\[DATE\]/$CURRENT_DATE/g" "$PRP_FILENAME"nn# Extract and add key requirementsnif grep -q "Key Requirements:" initial.md; thenn    echo "   📋 Adding key requirements..."n    sed -i "/## 🎯 Goal/a\n## 📋 Key Requirements\n$(sed -n "/Key Requirements:/,/^## /p" initial.md | head -n -1 | sed 's/^Key Requirements://' | sed 's/^- /- /' | sed 's/^  /  /')" "$PRP_FILENAME"nfi nn# Extract and add technical constraintsnif grep -q "Technical Constraints:" initial.md; thenn    echo "   🔧 Adding technical constraints..."n    sed -i "/## 🏗️ Context & Architecture/a\n### Technical Constraints\n$(sed -n "/Technical Constraints:/,/^## /p" initial.md | head -n -1 | sed 's/^Technical Constraints://' | sed 's/^- /- /' | sed 's/^  /  /')" "$PRP_FILENAME"nfi nn# Extract and add success criterianif grep -q "Success Criteria:" initial.md; thenn    echo "   ✅ Adding success criteria..."n    sed -i "/## 📋 What Will Be Built/a\n### Success Criteria\n$(sed -n "/Success Criteria:/,/^## /p" initial.md | head -n -1 | sed 's/^Success Criteria://' | sed 's/^- /- /' | sed 's/^  /  /')" "$PRP_FILENAME"nfi nn# Create backupncp "$PRP_FILENAME" "backups/$PRP_FILENAME.$(date +%Y%m%d-%H%M%S)"necho "   💾 Backup created in backups/ directory"nn# Validate generated PRPnif [ -f "$PRP_FILENAME" ]; thenn    echo "   🔍 Validating generated PRP..."n    # Check for remaining placeholdersn    if grep -q "\[.*\]" "$PRP_FILENAME"; thenn        echo "   ⚠️  Warning: Some placeholders remain in PRP"n        echo "   📝 Please review and complete manually:"n        grep -n "\[.*\]" "$PRP_FILENAME" | head -5n    else n        echo "   ✅ All placeholders replaced"n    fi n    n    # Check file size and structuren    if [ -s "$PRP_FILENAME" ]; thenn        echo "   ✅ PRP file generated successfully"n        echo "   📊 File size: $(wc -l < "$PRP_FILENAME") lines"n    else n        echo "❌ ERROR: Generated PRP is empty!"n        exit 1n    fi nelse n    echo "❌ ERROR: Failed to create PRP file"n    exit 1nfi nn# Create project metadata filenecho "   📊 Creating project metadata..."ncat > "project-metadata.json" << EOFn{n  "project_name": "$PROJECT_NAME",n  "language": "$LANGUAGE",n  "framework": "$FRAMEWORK",n  "prp_created": "$CURRENT_DATE",n  "template_version": "$LANGUAGE-template-v1",n  "workflow_completed": true,n  "files_generated": ["$PRP_FILENAME", "project-metadata.json"]n}nEOFnnecho "   ✅ Project metadata created"nnecho ""necho "🎉 Project PRP created successfully!"necho "📄 Main file: $PRP_FILENAME"necho "📊 Metadata: project-metadata.json"necho "💾 Backup: backups/ directory"necho ""necho "Next steps:"necho "1. Review and customize the generated PRP"necho "2. Add implementation details to each phase"necho "3. Run validation: ./workflows/validate-workflow.sh"necho "4. Begin implementation using the PRP as your guide"n