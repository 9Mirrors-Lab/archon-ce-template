#!/bin/bashn# create-advanced-prp.sh - Generate implementation-focused PRP using advanced template v3nnecho "📝 Creating implementation-focused PRP (Advanced v3)..."necho "   Includes: Implementation blueprint, validation loops, anti-patterns"nn# Check if project name is providednif [ -z "$1" ]; thenn    echo "❌ ERROR: Project name required"n    echo "Usage: ./create-advanced-prp.sh <project-name>"n    exit 1nfinnPROJECT_NAME="$1"nnecho "   Project: $PROJECT_NAME"necho "   Using advanced PRP template v3 for implementation precision"nn# Check if updated advanced template existsnif [ ! -f "templates/prp-base-advanced-v3-updated.md" ]; thenn    echo "❌ ERROR: Updated advanced PRP template v3 not found!"n    echo "   Run step-2-update-template.sh first"n    exit 1nfinn# Check if INITIAL.md existsnif [ ! -f "INITIAL.md" ]; thenn    echo "❌ ERROR: INITIAL.md not found!"n    echo "   Create INITIAL.md with project context first"n    exit 1nfinn# Create backups directorynmkdir -p "backups"nnecho "   📖 Reading project context from INITIAL.md..."nn# Extract project information from INITIAL.mdnLANGUAGE=$(grep "Language:" INITIAL.md | cut -d: -f2 | tr -d ' ')nPURPOSE=$(grep "Purpose:" INITIAL.md | cut -d: -f2 | tr -d ' ')nFRAMEWORK=$(grep "Framework:" INITIAL.md | cut -d: -f2 | tr -d ' ' || echo "None")nnecho "   ✅ Language: $LANGUAGE"necho "   ✅ Purpose: $PURPOSE"necho "   ✅ Framework: $FRAMEWORK"necho "   ✅ Using advanced PRP template v3"nn# Create project-specific PRPnPRP_FILENAME="$PROJECT_NAME.prp"necho "   📄 Generating: $PRP_FILENAME (Advanced v3)"nn# Copy updated advanced template to project PRPncp "templates/prp-base-advanced-v3-updated.md" "$PRP_FILENAME"nn# Replace placeholders with project-specific contentnCURRENT_DATE=$(date +%Y-%m-%d)nsed -i "s/\[PROJECT_NAME\]/$PROJECT_NAME/g" "$PRP_FILENAME"nsed -i "s/\[LANGUAGE\]/$LANGUAGE/g" "$PRP_FILENAME"nsed -i "s/\[FRAMEWORK\]/$FRAMEWORK/g" "$PRP_FILENAME"nsed -i "s/\[DATE\]/$CURRENT_DATE/g" "$PRP_FILENAME"nn# Extract and add key requirementsnif grep -q "Key Requirements:" INITIAL.md; thenn    echo "   📋 Adding key requirements..."n    sed -i "/## What/a\n### Key Requirements\n$(sed -n "/Key Requirements:/,/^## /p" INITIAL.md | head -n -1 | sed 's/^Key Requirements://' | sed 's/^- /- /' | sed 's/^  /  /')" "$PRP_FILENAME"nfi nn# Extract and add technical constraintsnif grep -q "Technical Constraints:" INITIAL.md; thenn    echo "   🔧 Adding technical constraints..."n    sed -i "/## All Needed Context/a\n### Technical Constraints\n$(sed -n "/Technical Constraints:/,/^## /p" INITIAL.md | head -n -1 | sed 's/^Technical Constraints://' | sed 's/^- /- /' | sed 's/^  /  /')" "$PRP_FILENAME"nfi nn# Extract and add success criterianif grep -q "Success Criteria:" INITIAL.md; thenn    echo "   ✅ Adding success criteria..."n    sed -i "/### Key Requirements/a\n### Success Criteria\n$(sed -n "/Success Criteria:/,/^## /p" INITIAL.md | head -n -1 | sed 's/^Success Criteria://' | sed 's/^- /- /' | sed s/^  /  /')" "$PRP_FILENAME"nfi nn# Add advanced PRP v3 specific enhancementsncat >> "$PRP_FILENAME" << EOFnn## 🎯 Advanced PRP v3 Implementation ReadynnThis PRP has been generated using the advanced template v3 system and includes:nn### ✅ What's Includedn- **Implementation Blueprint** with specific tasks and dependenciesn- **Validation Loop System** with 4 comprehensive levelsn- **Anti-Pattern Prevention** with specific examples to avoidn- **Pattern References** to existing codebase structuresn- **Integration Points** for system-wide changesn- **Cursor IDE Integration** for enhanced workflownn### 🚀 Next Stepsn1. **Review Implementation Blueprint** - Understand task dependenciesn2. **Study Pattern References** - Learn from existing codebasen3. **Follow Validation Loops** - Ensure quality at every stepn4. **Use Cursor IDE Rules** - Enhanced development experiencen5. **Begin Implementation** - Start with Task 1 and work through dependenciesnn### 🔍 Quality Assurancen- **Context Completeness** - All necessary information includedn- **Implementation Specificity** - Tasks are actionable and clearn- **Validation Coverage** - Comprehensive testing at all levelsn- **Anti-Pattern Prevention** - Common mistakes documented and avoidednnEOFnn# Create backupncp "$PRP_FILENAME" "backups/$PRP_FILENAME.$(date +%Y%m%d-%H%M%S)"necho "   💾 Backup created in backups/ directory"nn# Validate generated PRPnif [ -f "$PRP_FILENAME" ]; thenn    echo "   🔍 Validating generated advanced PRP..."n    # Check for remaining placeholdersn    if grep -q "\[.*\]" "$PRP_FILENAME"; thenn        echo "   ⚠️  Warning: Some placeholders remain in PRP"n        echo "   📝 Please review and complete manually:"n        grep -n "\[.*\]" "$PRP_FILENAME" | head -5n    else n        echo "   ✅ All placeholders replaced"n    fi n    n    # Check file size and structuren    if [ -s "$PRP_FILENAME" ]; thenn        echo "   ✅ Advanced PRP file generated successfully"n        echo "   📊 File size: $(wc -l < "$PRP_FILENAME") lines"n        echo "   🎯 Includes: Implementation blueprint, validation loops, anti-patterns"n    else n        echo "❌ ERROR: Generated advanced PRP is empty!"n        exit 1n    fi nelse n    echo "❌ ERROR: Failed to create advanced PRP file"n    exit 1nfi nn# Create project metadata filenecho "   📊 Creating project metadata..."ncat > "project-metadata.json" << EOFn{n  "project_name": "$PROJECT_NAME",n  "language": "$LANGUAGE",n  "framework": "$FRAMEWORK",n  "prp_created": "$CURRENT_DATE",n  "template_version": "advanced-v3",n  "workflow_completed": true,n  "advanced_features": [n    "implementation_blueprint",n    "validation_loops",n    "anti_patterns",n    "cursor_integration",n    "pattern_references"n  ],n  "files_generated": ["$PRP_FILENAME", "project-metadata.json"]n}nEOFnnecho "   ✅ Project metadata created"necho ""necho "🎉 Advanced PRP v3 created successfully!"necho "📄 Main file: $PRP_FILENAME"necho "📊 Metadata: project-metadata.json"necho "💾 Backup: backups/ directory"necho ""necho "🎯 Advanced Features Included:"necho "   • Implementation blueprint with specific tasks"necho "   • 4-level validation loop system"necho "   • Anti-pattern prevention"necho "   • Cursor IDE integration"necho "   • Pattern references to existing codebase"necho ""necho "Next steps:"necho "1. Review the generated advanced PRP thoroughly"necho "2. Understand the implementation blueprint and task dependencies"necho "3. Study pattern references for implementation guidance"necho "4. Follow validation loops during implementation"necho "5. Use Cursor IDE with enhanced rules for better workflow"necho "6. Begin implementation with Task 1 and work through dependencies"n