#!/bin/bashn# enhanced-versioning.sh - Smart template versioning system for language-specific templatesnnecho "🔄 Enhanced Template Versioning System"necho "====================================="necho ""nn# Check if language parameter is providednif [ -z "$1" ]; thenn    echo "❌ ERROR: Language parameter required"n    echo "Usage: ./enhanced-versioning.sh <language> [version-description]"n    exit 1nfinnLANGUAGE="$1"nDESCRIPTION="${2:-$(date +%Y%m%d)}"nnecho "   Language: $LANGUAGE"necho "   Description: $DESCRIPTION"necho ""nn# Check if updated template existsnif [ ! -f "templates/prp-base-advanced-v3-updated.md" ]; thenn    echo "❌ ERROR: Updated PRP template not found!"n    echo "   Run update-advanced-prp-template.sh first"n    exit 1nfinn# Create versioned templates directorynmkdir -p "templates/versioned-templates"nn# Check if this language already has versionsnEXISTING_VERSIONS=$(ls "templates/versioned-templates/$LANGUAGE-template-v"*.md 2>/dev/null | wc -l)nif [ $EXISTING_VERSIONS -gt 0 ]; thenn    echo "   📚 Found $EXISTING_VERSIONS existing version(s) for $LANGUAGE"n    echo "   📋 Existing versions:"n    ls "templates/versioned-templates/$LANGUAGE-template-v"*.md 2>/dev/null | sed 's/.*///' | sortn    echo ""nfi nn# Determine if we need a new versionnNEED_NEW_VERSION=falsenif [ $EXISTING_VERSIONS -eq 0 ]; thenn    echo "   🆕 First time using $LANGUAGE - creating v1"n    NEED_NEW_VERSION=truen    VERSION=1nelse n    # Check if there are significant changesn    echo "   🔍 Checking for significant changes..."n    LATEST_VERSION=$(ls "templates/versioned-templates/$LANGUAGE-template-v"*.md 2>/dev/null | sed 's/.*v\([0-9]*\)\.md/\1/' | sort -n | tail -1)n    echo "   📊 Latest version: v$LATEST_VERSION"n    n    # Compare with current updated templaten    if [ -f "templates/versioned-templates/$LANGUAGE-template-v$LATEST_VERSION.md" ]; thenn        DIFF_RESULT=$(diff "templates/versioned-templates/$LANGUAGE-template-v$LATEST_VERSION.md" "templates/prp-base-advanced-v3-updated.md" | wc -l)n        if [ $DIFF_RESULT -gt 10 ]; thenn            echo "   🔄 Significant changes detected - creating new version"n            NEED_NEW_VERSION=truen            VERSION=$((LATEST_VERSION + 1))n        else n            echo "   ✅ No significant changes - using existing version"n            NEED_NEW_VERSION=falsen            VERSION=$LATEST_VERSIONn        fi n    fi nfi nnif [ "$NEED_NEW_VERSION" = "true" ]; thenn    echo "   💾 Creating new version: v$VERSION"n    n    # Create new versioned templaten    cp "templates/prp-base-advanced-v3-updated.md" "templates/versioned-templates/$LANGUAGE-template-v$VERSION.md"n    n    # Create version metadatane    cat > "templates/versioned-templates/$LANGUAGE-template-v$VERSION.meta.json" << EOFn{n  "language": "$LANGUAGE",n  "version": $VERSION,n  "created_date": "$(date -I)",n  "description": "$DESCRIPTION",n  "source_template": "prp-base-advanced-v3-updated.md",n  "changes": [n    "Template updated for $LANGUAGE",n    "Language-specific patterns added",n    "Version $VERSION created"n  ],n  "significant_changes": true,n  "auto_generated": true,n  "usage_count": 0n}nEOFn    n    echo "   ✅ New version created: $LANGUAGE-template-v$VERSION.md"n    echo "   📊 Metadata: $LANGUAGE-template-v$VERSION.meta.json"n    n    # Update version indexn    cat > "templates/versioned-templates/version-index.json" << EOFn{n  "last_updated": "$(date -I)",n  "languages": {n    "$LANGUAGE": {n      "latest_version": $VERSION,n      "total_versions": $VERSION,n      "last_created": "$(date -I)",n      "versions": [nEOFn    n    # Add all versions for this languagen    for v in $(seq 1 $VERSION); don        if [ -f "templates/versioned-templates/$LANGUAGE-template-v$v.md" ]; thenn            echo "        $v" >> "templates/versioned-templates/version-index.json"n        fi n    donen    n    cat >> "templates/versioned-templates/version-index.json" << EOFn      ]n    }n  }n}nEOFn    n    echo "   📋 Version index updated"nelse n    echo "   📝 Updating existing version: v$VERSION"n    n    # Update usage count in metadatan    if [ -f "templates/versioned-templates/$LANGUAGE-template-v$VERSION.meta.json" ]; thenn        USAGE_COUNT=$(grep -o '"usage_count": [0-9]*' "templates/versioned-templates/$LANGUAGE-template-v$VERSION.meta.json" | cut -d: -f2 | tr -d ' ')n        NEW_COUNT=$((USAGE_COUNT + 1))n        sed -i "s/"usage_count": $USAGE_COUNT/"usage_count": $NEW_COUNT/" "templates/versioned-templates/$LANGUAGE-template-v$VERSION.meta.json"n        echo "   📊 Usage count updated: $NEW_COUNT"n    fi nfi necho ""necho "🎉 Enhanced versioning complete!"necho "📄 Current template: $LANGUAGE-template-v$VERSION.md"necho "📊 Total versions for $LANGUAGE: $VERSION"necho ""necho "💡 Version Management:"necho "   • New versions created automatically for significant changes"n    echo "   • Usage tracking for existing versions"n    echo "   • Version index maintained for easy reference"n    echo "   • Metadata includes change descriptions and timestamps"n