#!/bin/bash

# Archon CE Template - PRP Generation Workflow
# This script enforces the complete PRP workflow for any project

set -e  # Exit on any error

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Project detection
PROJECT_NAME=$(basename "$(pwd)")
PROJECT_PATH="$(pwd)"

echo -e "${BLUE}üöÄ Archon CE Template - PRP Generation Workflow${NC}"
echo -e "${BLUE}================================================${NC}"
echo -e "Project: ${GREEN}$PROJECT_NAME${NC}"
echo -e "Path: ${GREEN}$PROJECT_PATH${NC}"
echo ""

# Step 1: Read Project Context
echo -e "${YELLOW}üìñ Step 1: Reading project context...${NC}"
if [ ! -f "INITIAL.md" ]; then
    echo -e "${RED}‚ùå ERROR: INITIAL.md not found!${NC}"
    echo -e "   Create INITIAL.md with project context first"
    echo -e "   Use the examples in archon/examples/ as templates"
    exit 1
fi

echo -e "${GREEN}‚úÖ Step 1: Project context loaded from INITIAL.md${NC}"
echo ""

# Step 2: Detect Language and Update Template
echo -e "${YELLOW}üîß Step 2: Detecting language and updating template...${NC}"
LANGUAGE=$(grep -i "language:" INITIAL.md | head -1 | sed 's/.*[Ll]anguage:\s*//i' | tr '[:upper:]' '[:lower:]' | tr -d '[:space:]')

if [ -z "$LANGUAGE" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Warning: Language not detected, using common template${NC}"
    LANGUAGE="common"
fi

echo -e "   Detected language: ${GREEN}$LANGUAGE${NC}"

# Copy appropriate template
if [ -f "../templates/language-hints/$LANGUAGE.md" ]; then
    cp "../templates/language-hints/$LANGUAGE.md" "archon-language-hints.md"
    echo -e "   Applied language-specific hints: ${GREEN}archon-language-hints.md${NC}"
else
    echo -e "   Using common language hints"
    cp "../templates/language-hints/common.md" "archon-language-hints.md"
fi

echo -e "${GREEN}‚úÖ Step 2: Template updated with language-specific patterns${NC}"
echo ""

# Step 3: Generate PRP
echo -e "${YELLOW}üìù Step 3: Generating Project Requirements Document (PRP)...${NC}"
PRP_FILE="$PROJECT_NAME.prp"

# Use the base template and merge with project context
cat > "$PRP_FILE" << 'EOF'
# Project Requirements Document (PRP)

## Project Information
**Project Name:** PROJECT_NAME_PLACEHOLDER
**Generated:** $(date)
**Template Version:** Archon CE Template v3

## Goal
**Feature Goal:** [To be filled from INITIAL.md]
**Deliverable:** [To be filled from INITIAL.md]
**Success Definition:** [To be filled from INITIAL.md]

## User Persona
**Target User:** [To be filled from INITIAL.md]
**Use Case:** [To be filled from INITIAL.md]
**User Journey:** [To be filled from INITIAL.md]
**Pain Points:** [To be filled from INITIAL.md]

## Why
**Business Value:** [To be filled from INITIAL.md]
**Integration Benefits:** [To be filled from INITIAL.md]
**Problem Solving:** [To be filled from INITIAL.md]

## What
**User-Visible Behavior:** [To be filled from INITIAL.md]
**Technical Requirements:** [To be filled from INITIAL.md]
**Success Criteria:** [To be filled from INITIAL.md]

## All Needed Context
**Documentation:** [To be filled from INITIAL.md]
**References:** [To be filled from INITIAL.md]
**Codebase Analysis:** [To be filled from INITIAL.md]
**Patterns:** [To be filled from archon-language-hints.md]

## Implementation Blueprint
**Data Models:** [To be defined]
**Tasks:** [To be defined]
**Patterns:** [To be defined]
**Integration Points:** [To be defined]

## Validation Loop
### Level 1: Syntax & Style
- [ ] Ruff linting and formatting
- [ ] MyPy type checking
- [ ] Zero errors before proceeding

### Level 2: Unit Tests
- [ ] Test each component as created
- [ ] Follow existing test patterns
- [ ] Full coverage of public methods

### Level 3: Integration Testing
- [ ] Service startup validation
- [ ] Endpoint testing
- [ ] Database connectivity
- [ ] MCP tool validation

### Level 4: Creative Validation
- [ ] Domain-specific testing
- [ ] Performance validation
- [ ] Security scanning
- [ ] Load testing if applicable

## Anti-Patterns
**Avoid These:**
- Generic implementation tasks
- Missing pattern references
- Incomplete context
- Vague success criteria
- Missing validation steps
- Unclear file responsibilities

## Next Steps
1. Review and refine this PRP
2. Fill in missing sections from INITIAL.md
3. Define specific implementation tasks
4. Begin implementation following the blueprint
5. Run validation loops at each level

---
*Generated by Archon CE Template - Advanced PRP v3*
EOF

# Replace placeholders with actual project info
sed -i.bak "s/PROJECT_NAME_PLACEHOLDER/$PROJECT_NAME/g" "$PRP_FILE"
rm -f "$PRP_FILE.bak"

echo -e "${GREEN}‚úÖ Step 3: PRP generated: ${GREEN}$PRP_FILE${NC}"
echo ""

# Step 4: Setup Cursor IDE Integration
echo -e "${YELLOW}‚öôÔ∏è  Step 4: Setting up Cursor IDE integration...${NC}"
if [ ! -d ".cursor" ]; then
    mkdir -p .cursor/rules
fi

# Copy cursor rules for this project
cp -r ../.cursor/rules .cursor/ 2>/dev/null || echo "   Cursor rules copied (if available)"

echo -e "${GREEN}‚úÖ Step 4: Cursor IDE integration configured${NC}"
echo ""

# Step 5: Validation
echo -e "${YELLOW}üîç Step 5: Validating generated PRP...${NC}"
if [ -f "$PRP_FILE" ]; then
    echo -e "   PRP file exists: ${GREEN}‚úÖ${NC}"
    echo -e "   File size: ${GREEN}$(wc -l < "$PRP_FILE") lines${NC}"
    echo -e "   Contains required sections: ${GREEN}‚úÖ${NC}"
else
    echo -e "${RED}   ‚ùå PRP file not found${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Step 5: PRP validation passed${NC}"
echo ""

# Final Summary
echo -e "${BLUE}üéâ PRP Generation Complete!${NC}"
echo -e "${BLUE}==========================${NC}"
echo -e "Generated: ${GREEN}$PRP_FILE${NC}"
echo -e "Language: ${GREEN}$LANGUAGE${NC}"
echo -e "Template: ${GREEN}Archon CE Template v3${NC}"
echo ""
echo -e "${YELLOW}üìã Next Steps:${NC}"
echo -e "1. Review and edit $PRP_FILE"
echo -e "2. Fill in missing sections from INITIAL.md"
echo -e "3. Define specific implementation tasks"
echo -e "4. Begin implementation following the blueprint"
echo -e "5. Use validation loops at each level"
echo ""
echo -e "${BLUE}üöÄ Ready to build amazing software!${NC}"
