#!/bin/bashn# generate-project.sh - Creates new project structure with advanced PRP v3 and Cursor rulesnnecho "🚀 Archon CE Template - Advanced Project Generator (v3)"necho "======================================================="necho ""necho "🎯 This generator includes:"necho "   • Advanced PRP template v3 (implementation-focused)"necho "   • Cursor IDE rules for enhanced workflow"necho "   • Language-specific pattern adaptation"necho "   • Comprehensive validation loops"necho ""nn# Check if project name is providednif [ -z "$1" ]; thenn    echo "Usage: ./generate-project.sh <project-name>"n    echo "Example: ./generate-project.sh my-awesome-project"n    echo ""n    echo "Advanced features:"n    echo "   • Implementation blueprint with specific tasks"n    echo "   • 4-level validation loop system"n    echo "   • Anti-pattern prevention"n    echo "   • Cursor IDE integration"n    exit 1nfinnPROJECT_NAME="$1"nPROJECT_PATH="../$PROJECT_NAME"nn# Check if project already existsnif [ -d "$PROJECT_PATH" ]; thenn    echo "❌ ERROR: Project $PROJECT_NAME already exists!"n    exit 1nfinnecho "📁 Creating project: $PROJECT_NAME"necho "   Using advanced PRP v3 template with Cursor integration"nn# Create project directorynmkdir -p "$PROJECT_PATH"nn# Copy template files (excluding git and this script)nrsync -av --exclude=".git" --exclude="generate-project.sh" --exclude="*.md" . "$PROJECT_PATH/"nn# Copy essential markdown filesncp README.md "$PROJECT_PATH/"ncp LICENSE "$PROJECT_PATH/"ncp .gitignore "$PROJECT_PATH/"nn# Create initial project structurenmkdir -p "$PROJECT_PATH/src"nmkdir -p "$PROJECT_PATH/tests"nmkdir -p "$PROJECT_PATH/docs"nn# Create INITIAL.md template (capitalized for v3 workflow)ncat > "$PROJECT_PATH/INITIAL.md" << EOFn# Project: $PROJECT_NAMEnn## Project ContextnLanguage: [Specify your language: Python, JavaScript, Rust, etc.]nFramework: [Specify framework if applicable]nPurpose: [Brief description of what this project will do]nn## Key Requirementsn- [Requirement 1]n- [Requirement 2]n- [Requirement 3]nn## Technical Constraintsn- [Constraint 1]n- [Constraint 2]nn## Success Criterian- [Criterion 1]n- [Criterion 2]nn## Implementation FocusnThis project will use the advanced PRP v3 template with:n- Implementation blueprint with specific tasksn- 4-level validation loop systemn- Anti-pattern preventionn- Cursor IDE integrationn- Pattern references to existing codebasenn## Next Stepsn1. Edit INITIAL.md with your project detailsn2. Run: ./workflows/enforce-prp-workflow.shn3. Review the generated advanced PRPn4. Begin implementation with precision guidancenEOFnn# Create advanced project README with v3 informationncat > "$PROJECT_PATH/README.md" << EOFn# $PROJECT_NAMEnn## Advanced PRP v3 ProjectnnThis project uses the Archon CE Template advanced PRP v3 system for implementation-focused development.nn## 🎯 Advanced Featuresnn- **Implementation Blueprint** - Specific tasks with dependenciesn- **Validation Loops** - 4-level quality assurance systemn- **Anti-Pattern Prevention** - Common mistakes documentedn- **Cursor IDE Integration** - Enhanced development workflown- **Pattern References** - Learn from existing codebasenn## 🚀 Getting Startednn1. **Edit INITIAL.md** with your project detailsn2. **Run the workflow**: `./workflows/enforce-prp-workflow.sh`n3. **Review generated PRP** for implementation guidancen4. **Begin development** following the blueprintn5. **Use validation loops** at every stepnn## 📁 Project Structurenn- `INITIAL.md` - Project context (required for v3 workflow)n- `workflows/` - Advanced PRP workflow scriptsn- `templates/` - Advanced PRP templates and language hintsn- `cursor-rules/` - Cursor IDE integration rulesn- `scripts/` - Utility scripts for template managementn- `src/` - Your source code directoryn- `tests/` - Your test directoryn- `docs/` - Your documentation directorynn## 🔄 Advanced WorkflownnThe v3 workflow automatically:n1. **Reads context** from INITIAL.mdn2. **Updates template** with language-specific patternsn3. **Generates PRP** with implementation blueprintn4. **Sets up Cursor** IDE rules for enhanced workflownn## 📚 Learn Morenn- [Archon CE Template Documentation](https://github.com/9Mirrors-Lab/archon-ce-template)n- [Advanced PRP v3 Features](https://github.com/9Mirrors-Lab/archon-ce-template/docs/workflow.md)n- [Cursor IDE Integration](https://github.com/9Mirrors-Lab/archon-ce-template/docs/cursor-integration.md)nn---nn*Generated with Archon CE Template Advanced PRP v3 System*nEOFnnecho "✅ Project $PROJECT_NAME created successfully!"necho "📁 Location: $PROJECT_PATH"necho ""necho "🎯 Advanced Features Included:"necho "   • Advanced PRP template v3 (implementation-focused)"necho "   • Cursor IDE rules for enhanced workflow"necho "   • Language-specific pattern adaptation"necho "   • Comprehensive validation loops"necho "   • Anti-pattern prevention"necho ""necho "Next steps:"necho "1. cd $PROJECT_PATH"necho "2. Edit INITIAL.md with your project details"necho "3. Run: ./workflows/enforce-prp-workflow.sh"necho "4. Review the generated advanced PRP"necho "5. Begin implementation with precision guidance"necho ""necho "💡 Advanced Workflow Benefits:"necho "   • Implementation precision with specific tasks"necho "   • Quality assurance at every step"necho "   • Pattern consistency across codebase"necho "   • Enhanced IDE experience with Cursor rules"necho ""necho "🎉 Happy coding with advanced PRP v3!"n