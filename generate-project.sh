#!/bin/bashn# generate-project.sh - Creates new project structure from templatennecho "🚀 Archon CE Template - Project Generator"necho "========================================="nn# Check if project name is providednif [ -z "$1" ]; thenn    echo "Usage: ./generate-project.sh <project-name>"n    echo "Example: ./generate-project.sh my-awesome-project"n    exit 1nfinnPROJECT_NAME="$1"nPROJECT_PATH="../$PROJECT_NAME"nn# Check if project already existsnif [ -d "$PROJECT_PATH" ]; thenn    echo "❌ Project $PROJECT_NAME already exists!"n    exit 1nfinnecho "📁 Creating project: $PROJECT_NAME"nn# Create project directorynmkdir -p "$PROJECT_PATH"nn# Copy template files (excluding git and this script)nrsync -av --exclude=".git" --exclude="generate-project.sh" --exclude="*.md" . "$PROJECT_PATH/"nn# Copy essential markdown filesncp README.md "$PROJECT_PATH/"ncp LICENSE "$PROJECT_PATH/"ncp .gitignore "$PROJECT_PATH/"nn# Create initial project structurenmkdir -p "$PROJECT_PATH/src"nmkdir -p "$PROJECT_PATH/tests"nmkdir -p "$PROJECT_PATH/docs"nn# Create initial.md templatencat > "$PROJECT_PATH/initial.md" << EOFn# Project: $PROJECT_NAMEnn## Project ContextnLanguage: [Specify your language: Python, JavaScript, Rust, etc.]nFramework: [Specify framework if applicable]nPurpose: [Brief description of what this project will do]nn## Key Requirementsn- [Requirement 1]n- [Requirement 2]n- [Requirement 3]nn## Technical Constraintsn- [Constraint 1]n- [Constraint 2]nn## Success Criterian- [Criterion 1]n- [Criterion 2]nEOFnnecho "✅ Project $PROJECT_NAME created successfully!"necho "📁 Location: $PROJECT_PATH"necho ""necho "Next steps:"necho "1. cd $PROJECT_PATH"necho "2. Edit initial.md with your project details"necho "3. Run: ./workflows/enforce-prp-workflow.sh"necho ""necho "🎉 Happy coding!"n